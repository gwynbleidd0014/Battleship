(()=>{"use strict";var n={198:(n,e,t)=>{t.d(e,{Z:()=>s});var r=t(537),o=t.n(r),a=t(645),i=t.n(a)()(o());i.push([n.id,".place-carrier-view {\n  background: var(--black);\n  width: 100vw;\n  height: 100vh;\n  overflow-x: hidden;\n  color: var(--white);\n}\n\n.place-carrier-wrapper {\n  width: 90vw;\n  margin: 0 auto;\n  text-align: center;\n  background: var(--gray);\n  margin-top: 5em;\n  padding: 1em;\n  text-transform: uppercase;\n  border-radius: 5px;\n  margin-bottom: 2em;\n}\n\n.welcome-to-game {\n  font-size: 1rem;\n  color: var(--yellow);\n}\n\n.place-carrier {\n  margin-bottom: 0.5em;\n}\n\n.flip-btn {\n  color: var(--blue);\n  padding: 0.3em 0.7em;\n  transition:\n    background-color 200ms ease-in,\n    color 200ms ease-in;\n  width: max-content;\n  margin: 0 auto;\n  border-radius: 5px;\n  font-weight: 600;\n  letter-spacing: 1px;\n}\n\n.flip-btn:hover {\n  color: var(--white);\n  background: var(--blue);\n  cursor: pointer;\n}\n\n.placing-cell {\n  width: calc(calc(90vw - 25px) / 10);\n  height: calc(90vw / 10);\n  background: var(--white);\n  border: 1px solid var(--black);\n}\n\n.starting-board {\n  border: 1px solid var(--black);\n}\n","",{version:3,sources:["webpack://./src/css/placing-view.css"],names:[],mappings:"AAAA;EACE,wBAAwB;EACxB,YAAY;EACZ,aAAa;EACb,kBAAkB;EAClB,mBAAmB;AACrB;;AAEA;EACE,WAAW;EACX,cAAc;EACd,kBAAkB;EAClB,uBAAuB;EACvB,eAAe;EACf,YAAY;EACZ,yBAAyB;EACzB,kBAAkB;EAClB,kBAAkB;AACpB;;AAEA;EACE,eAAe;EACf,oBAAoB;AACtB;;AAEA;EACE,oBAAoB;AACtB;;AAEA;EACE,kBAAkB;EAClB,oBAAoB;EACpB;;uBAEqB;EACrB,kBAAkB;EAClB,cAAc;EACd,kBAAkB;EAClB,gBAAgB;EAChB,mBAAmB;AACrB;;AAEA;EACE,mBAAmB;EACnB,uBAAuB;EACvB,eAAe;AACjB;;AAEA;EACE,mCAAmC;EACnC,uBAAuB;EACvB,wBAAwB;EACxB,8BAA8B;AAChC;;AAEA;EACE,8BAA8B;AAChC",sourcesContent:[".place-carrier-view {\n  background: var(--black);\n  width: 100vw;\n  height: 100vh;\n  overflow-x: hidden;\n  color: var(--white);\n}\n\n.place-carrier-wrapper {\n  width: 90vw;\n  margin: 0 auto;\n  text-align: center;\n  background: var(--gray);\n  margin-top: 5em;\n  padding: 1em;\n  text-transform: uppercase;\n  border-radius: 5px;\n  margin-bottom: 2em;\n}\n\n.welcome-to-game {\n  font-size: 1rem;\n  color: var(--yellow);\n}\n\n.place-carrier {\n  margin-bottom: 0.5em;\n}\n\n.flip-btn {\n  color: var(--blue);\n  padding: 0.3em 0.7em;\n  transition:\n    background-color 200ms ease-in,\n    color 200ms ease-in;\n  width: max-content;\n  margin: 0 auto;\n  border-radius: 5px;\n  font-weight: 600;\n  letter-spacing: 1px;\n}\n\n.flip-btn:hover {\n  color: var(--white);\n  background: var(--blue);\n  cursor: pointer;\n}\n\n.placing-cell {\n  width: calc(calc(90vw - 25px) / 10);\n  height: calc(90vw / 10);\n  background: var(--white);\n  border: 1px solid var(--black);\n}\n\n.starting-board {\n  border: 1px solid var(--black);\n}\n"],sourceRoot:""}]);const s=i},806:(n,e,t)=>{t.d(e,{Z:()=>s});var r=t(537),o=t.n(r),a=t(645),i=t.n(a)()(o());i.push([n.id,'.start-view {\n  background: var(--black);\n  width: 100vw;\n  height: 100vh;\n  color: var(--white);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  overflow: hidden;\n}\n\n.sub-heading {\n  margin-top: 12em;\n  color: var(--yellow);\n  font-size: 1.07rem;\n  text-align: center;\n  text-transform: uppercase;\n}\n\n.heading {\n  margin-top: 0.2em;\n  display: block;\n  text-align: center;\n  color: var(--white);\n  font-family: "Rubik Mono One", sans-serif;\n  font-size: 2rem;\n  margin-bottom: 0.8em;\n}\n\n.start-btn {\n  text-transform: uppercase;\n  font-weight: 600;\n  letter-spacing: 1px;\n  color: var(--blue);\n  padding: 0.3em 0.5em;\n  transition:\n    backround-color 200ms ease-in,\n    color 200ms ease-in;\n  border-radius: 5px;\n}\n\n.start-btn:hover {\n  background: var(--blue);\n  color: var(--white);\n  cursor: pointer;\n}\n\n@media screen and (min-width: 768px) {\n  .sub-heading {\n    font-size: 2rem;\n  }\n\n  .heading {\n    font-size: 4rem;\n  }\n\n  .start-btn {\n    font-size: 2rem;\n  }\n}\n',"",{version:3,sources:["webpack://./src/css/start-view.css"],names:[],mappings:"AAAA;EACE,wBAAwB;EACxB,YAAY;EACZ,aAAa;EACb,mBAAmB;EACnB,aAAa;EACb,sBAAsB;EACtB,mBAAmB;EACnB,gBAAgB;AAClB;;AAEA;EACE,gBAAgB;EAChB,oBAAoB;EACpB,kBAAkB;EAClB,kBAAkB;EAClB,yBAAyB;AAC3B;;AAEA;EACE,iBAAiB;EACjB,cAAc;EACd,kBAAkB;EAClB,mBAAmB;EACnB,yCAAyC;EACzC,eAAe;EACf,oBAAoB;AACtB;;AAEA;EACE,yBAAyB;EACzB,gBAAgB;EAChB,mBAAmB;EACnB,kBAAkB;EAClB,oBAAoB;EACpB;;uBAEqB;EACrB,kBAAkB;AACpB;;AAEA;EACE,uBAAuB;EACvB,mBAAmB;EACnB,eAAe;AACjB;;AAEA;EACE;IACE,eAAe;EACjB;;EAEA;IACE,eAAe;EACjB;;EAEA;IACE,eAAe;EACjB;AACF",sourcesContent:['.start-view {\n  background: var(--black);\n  width: 100vw;\n  height: 100vh;\n  color: var(--white);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  overflow: hidden;\n}\n\n.sub-heading {\n  margin-top: 12em;\n  color: var(--yellow);\n  font-size: 1.07rem;\n  text-align: center;\n  text-transform: uppercase;\n}\n\n.heading {\n  margin-top: 0.2em;\n  display: block;\n  text-align: center;\n  color: var(--white);\n  font-family: "Rubik Mono One", sans-serif;\n  font-size: 2rem;\n  margin-bottom: 0.8em;\n}\n\n.start-btn {\n  text-transform: uppercase;\n  font-weight: 600;\n  letter-spacing: 1px;\n  color: var(--blue);\n  padding: 0.3em 0.5em;\n  transition:\n    backround-color 200ms ease-in,\n    color 200ms ease-in;\n  border-radius: 5px;\n}\n\n.start-btn:hover {\n  background: var(--blue);\n  color: var(--white);\n  cursor: pointer;\n}\n\n@media screen and (min-width: 768px) {\n  .sub-heading {\n    font-size: 2rem;\n  }\n\n  .heading {\n    font-size: 4rem;\n  }\n\n  .start-btn {\n    font-size: 2rem;\n  }\n}\n'],sourceRoot:""}]);const s=i},402:(n,e,t)=>{t.d(e,{Z:()=>u});var r=t(537),o=t.n(r),a=t(645),i=t.n(a),s=t(806),A=t(553),c=t(198),l=i()(o());l.i(s.Z),l.i(A.Z),l.i(c.Z),l.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;600&family=Rubik+Mono+One&display=swap);"]),l.push([n.id,':root {\n  --black: #000;\n  --yellow: #faec00;\n  --white: #fff;\n  --blue: #0cabe8;\n  --gray: #9d9d9d33;\n}\n\nhtml {\n  font-family: "Open Sans", sans-serif;\n  font-size: 16px;\n  font-weight: 400;\n}\n\n*,\n*::after,\n*::before {\n  margin: 0;\n  padding: 0;\n  border-radius: 0;\n}\n\n.board {\n  display: grid;\n  grid-template-columns: repeat(10, 1fr);\n}\n',"",{version:3,sources:["webpack://./src/css/style.css"],names:[],mappings:"AAKA;EACE,aAAa;EACb,iBAAiB;EACjB,aAAa;EACb,eAAe;EACf,iBAAiB;AACnB;;AAEA;EACE,oCAAoC;EACpC,eAAe;EACf,gBAAgB;AAClB;;AAEA;;;EAGE,SAAS;EACT,UAAU;EACV,gBAAgB;AAClB;;AAEA;EACE,aAAa;EACb,sCAAsC;AACxC",sourcesContent:['@import "start-view.css";\n@import "utility.css";\n@import "placing-view";\n@import url("https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;600&family=Rubik+Mono+One&display=swap");\n\n:root {\n  --black: #000;\n  --yellow: #faec00;\n  --white: #fff;\n  --blue: #0cabe8;\n  --gray: #9d9d9d33;\n}\n\nhtml {\n  font-family: "Open Sans", sans-serif;\n  font-size: 16px;\n  font-weight: 400;\n}\n\n*,\n*::after,\n*::before {\n  margin: 0;\n  padding: 0;\n  border-radius: 0;\n}\n\n.board {\n  display: grid;\n  grid-template-columns: repeat(10, 1fr);\n}\n'],sourceRoot:""}]);const u=l},553:(n,e,t)=>{t.d(e,{Z:()=>s});var r=t(537),o=t.n(r),a=t(645),i=t.n(a)()(o());i.push([n.id,".hidden {\n  display: none;\n}\n","",{version:3,sources:["webpack://./src/css/utility.css"],names:[],mappings:"AAAA;EACE,aAAa;AACf",sourcesContent:[".hidden {\n  display: none;\n}\n"],sourceRoot:""}]);const s=i},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,o,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(r)for(var s=0;s<this.length;s++){var A=this[s][0];null!=A&&(i[A]=!0)}for(var c=0;c<n.length;c++){var l=[].concat(n[c]);r&&i[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),e.push(l))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */");return[e].concat([a]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var a={},i=[],s=0;s<n.length;s++){var A=n[s],c=r.base?A[0]+r.base:A[0],l=a[c]||0,u="".concat(c," ").concat(l);a[c]=l+1;var d=t(u),p={css:A[1],media:A[2],sourceMap:A[3],supports:A[4],layer:A[5]};if(-1!==d)e[d].references++,e[d].updater(p);else{var f=o(p,r);r.byIndex=s,e.splice(s,0,{identifier:u,updater:f,references:1})}i.push(u)}return i}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var a=r(n=n||[],o=o||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var s=t(a[i]);e[s].references--}for(var A=r(n,o),c=0;c<a.length;c++){var l=t(a[c]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}a=A}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(r){var o=e[r];if(void 0!==o)return o.exports;var a=e[r]={id:r,exports:{}};return n[r](a,a.exports,t),a.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.nc=void 0,(()=>{var n=t(379),e=t.n(n),r=t(795),o=t.n(r),a=t(569),i=t.n(a),s=t(565),A=t.n(s),c=t(216),l=t.n(c),u=t(589),d=t.n(u),p=t(402),f={};f.styleTagTransform=d(),f.setAttributes=A(),f.insert=i().bind(null,"head"),f.domAPI=o(),f.insertStyleElement=l(),e()(p.Z,f),p.Z&&p.Z.locals&&p.Z.locals;class m{constructor(n,e){this.name=n,this.length=e,this.hits=0,this.sunk=!1}hit(){return this.hits++,this.hits}isSunk(){return this.hits>=this.length}}class h{constructor(){this.board=this.buildBoard(10),this.ships={}}buildBoard(n){let e=[];for(let t=0;t<n;t++){e.push([]);for(let r=0;r<n;r++)e[t].push("Free")}return e}placeShip(n){let e=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],t=arguments.length>2?arguments[2]:void 0,[r,o]=n;if(e)for(let n=0;n<t.length;n++)this.board[r][o]=t.name,o++;else for(let n=0;n<t.length;n++)this.board[r][o]=t.name,r++;return this.ships[t.name]=t,this.board}receiveAttack(n,e){if(!(n>=0&&n<this.board.length&&e>=0&&e<this.board.length))return"No such position";"Free"===this.board[n][e]?this.board[n][e]="Missed":this.ships[this.board[n][e]].hit()}allShipsSunk(){for(let n of Object.values(this.ships))if(n.length>n.hits)return!1;return!0}}const g=document.querySelector(".starting-board"),B=document.querySelector(".place-carrier");let v=!0,b=0;const E=[["Carrier",5],["Battleship",4],["Cruiser",3],["Submarine",3],["Destroyer",2]],C=new h;function w(n,e,t,r,o){let[a,i]=t;const s=function(n,e,t,r){if(v){for(let t=0;t<e;t++){if(n.classList.contains("taken"))return!1;n=n?.nextElementSibling?n.nextElementSibling:n}return!0}for(let o=0;o<e;o++){if(n.classList.contains("taken"))return!1;t+10<99&&(n=r[t+10],t+=10)}return!0}(e,n,r,o),A=function(n,e,t,r,o,a){if(v){for(let r=0;r<e;r++){if(y(n)[0]!==t)return!1;n=n?.nextElementSibling?n.nextElementSibling:n}return!0}for(let t=0;t<e;t++){if(o>99)return!1;o+10<99&&(n=a[o+10]),o+=10}return!0}(e,n,a,0,r,o);return s&&A}function y(n){return n.dataset.pos.split(",").map((n=>parseInt(n)))}new h,new class{constructor(n){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(this.name=n,this.ai=e,e){this.available=[];for(let n=0;n<10;n++)for(let e=0;e<10;e++)this.available.push([n,e])}}makeMove(n,e){if(this.ai){const e=Math.floor(Math.random()*this.available.length);n.receiveAttack(this.available[e][0],this.available[e][1]),this.available.splice(e,1)}else n.receiveAttack(e[0],e[1])}}("Jake"),function(){for(let n=0;n<10;n++)for(let e=0;e<10;e++){const t=document.createElement("div");t.className="cell placing-cell",t.dataset.pos=n+","+e,g.appendChild(t)}}(),function(){const n=document.querySelectorAll(".placing-cell");document.querySelector(".flip-btn").addEventListener("click",(()=>{v=!v})),n.forEach(((e,t)=>{e.addEventListener("mouseover",(e=>function(n,e,t,r){let o=n.target,a=(t+1)%10;Math.floor(t/10);const i=w(e,n.target,y(n.target),t,r);for(let n=0;n<e;n++)if(v){const e=i?"green":"red";if(o.style.backgroundColor=e,o=o.nextElementSibling,a+n===0||a+n===10||t+n===99)return}else{const n=i?"green":"red";if(o.style.backgroundColor=n,t+10>99)return;o=r[t+10],t+=10}}(e,E[b][1],t,n))),e.addEventListener("mouseout",(e=>function(n,e,t,r){let o=n.target;for(let n=0;n<e;n++)if(v){if(o.style.backgroundColor="white",o=o.nextElementSibling,t+n===99)return}else{if(o.style.backgroundColor="white",t+10>99)return;o=r[t+10],t+=10}}(e,E[b][1]+1,t,n))),e.addEventListener("click",(e=>function(n,e,t,r,o){let[a,i]=y(n);Math.floor(r/10);const s=w(E[b][1],n,y(n),r,o);(v&&s||!v&&s)&&(t.placeShip([a,i],v,new m(E[b][0],E[b][1])),5===b&&startGame(),b++,B.textContent=`PLACE YOUR ${E[b][0]}`)}(e.target,0,C,t,n)))}))}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,