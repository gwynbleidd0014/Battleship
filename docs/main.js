(()=>{"use strict";var n={198:(n,e,r)=>{r.d(e,{Z:()=>A});var t=r(537),o=r.n(t),a=r(645),i=r.n(a)()(o());i.push([n.id,".place-carrier-view {\n  background: var(--black);\n  width: 100vw;\n  height: 100vh;\n  overflow-x: hidden;\n  color: var(--white);\n}\n\n.place-carrier-wrapper {\n  width: 90vw;\n  margin: 0 auto;\n  text-align: center;\n  background: var(--gray);\n  margin-top: 5em;\n  padding: 1em;\n  text-transform: uppercase;\n  border-radius: 5px;\n  margin-bottom: 2em;\n}\n\n.welcome-to-game {\n  font-size: 1rem;\n  color: var(--yellow);\n}\n\n.place-carrier {\n  margin-bottom: 0.5em;\n}\n\n.flip-btn {\n  color: var(--blue);\n  padding: 0.3em 0.7em;\n  transition:\n    background-color 200ms ease-in,\n    color 200ms ease-in;\n  width: max-content;\n  margin: 0 auto;\n  border-radius: 5px;\n  font-weight: 600;\n  letter-spacing: 1px;\n}\n\n.flip-btn:hover {\n  color: var(--white);\n  background: var(--blue);\n  cursor: pointer;\n}\n\n.placing-cell {\n  width: calc(calc(90vw - 25px) / 10);\n  height: calc(90vw / 10);\n  background: var(--white);\n  border: 1px solid var(--black);\n}\n\n.starting-board {\n  border: 1px solid var(--black);\n}\n","",{version:3,sources:["webpack://./src/css/placing-view.css"],names:[],mappings:"AAAA;EACE,wBAAwB;EACxB,YAAY;EACZ,aAAa;EACb,kBAAkB;EAClB,mBAAmB;AACrB;;AAEA;EACE,WAAW;EACX,cAAc;EACd,kBAAkB;EAClB,uBAAuB;EACvB,eAAe;EACf,YAAY;EACZ,yBAAyB;EACzB,kBAAkB;EAClB,kBAAkB;AACpB;;AAEA;EACE,eAAe;EACf,oBAAoB;AACtB;;AAEA;EACE,oBAAoB;AACtB;;AAEA;EACE,kBAAkB;EAClB,oBAAoB;EACpB;;uBAEqB;EACrB,kBAAkB;EAClB,cAAc;EACd,kBAAkB;EAClB,gBAAgB;EAChB,mBAAmB;AACrB;;AAEA;EACE,mBAAmB;EACnB,uBAAuB;EACvB,eAAe;AACjB;;AAEA;EACE,mCAAmC;EACnC,uBAAuB;EACvB,wBAAwB;EACxB,8BAA8B;AAChC;;AAEA;EACE,8BAA8B;AAChC",sourcesContent:[".place-carrier-view {\n  background: var(--black);\n  width: 100vw;\n  height: 100vh;\n  overflow-x: hidden;\n  color: var(--white);\n}\n\n.place-carrier-wrapper {\n  width: 90vw;\n  margin: 0 auto;\n  text-align: center;\n  background: var(--gray);\n  margin-top: 5em;\n  padding: 1em;\n  text-transform: uppercase;\n  border-radius: 5px;\n  margin-bottom: 2em;\n}\n\n.welcome-to-game {\n  font-size: 1rem;\n  color: var(--yellow);\n}\n\n.place-carrier {\n  margin-bottom: 0.5em;\n}\n\n.flip-btn {\n  color: var(--blue);\n  padding: 0.3em 0.7em;\n  transition:\n    background-color 200ms ease-in,\n    color 200ms ease-in;\n  width: max-content;\n  margin: 0 auto;\n  border-radius: 5px;\n  font-weight: 600;\n  letter-spacing: 1px;\n}\n\n.flip-btn:hover {\n  color: var(--white);\n  background: var(--blue);\n  cursor: pointer;\n}\n\n.placing-cell {\n  width: calc(calc(90vw - 25px) / 10);\n  height: calc(90vw / 10);\n  background: var(--white);\n  border: 1px solid var(--black);\n}\n\n.starting-board {\n  border: 1px solid var(--black);\n}\n"],sourceRoot:""}]);const A=i},806:(n,e,r)=>{r.d(e,{Z:()=>A});var t=r(537),o=r.n(t),a=r(645),i=r.n(a)()(o());i.push([n.id,'.start-view {\n  background: var(--black);\n  width: 100vw;\n  height: 100vh;\n  color: var(--white);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  overflow: hidden;\n}\n\n.sub-heading {\n  margin-top: 12em;\n  color: var(--yellow);\n  font-size: 1.07rem;\n  text-align: center;\n  text-transform: uppercase;\n}\n\n.heading {\n  margin-top: 0.2em;\n  display: block;\n  text-align: center;\n  color: var(--white);\n  font-family: "Rubik Mono One", sans-serif;\n  font-size: 2rem;\n  margin-bottom: 0.8em;\n}\n\n.start-btn {\n  text-transform: uppercase;\n  font-weight: 600;\n  letter-spacing: 1px;\n  color: var(--blue);\n  padding: 0.3em 0.5em;\n  transition:\n    backround-color 200ms ease-in,\n    color 200ms ease-in;\n  border-radius: 5px;\n}\n\n.start-btn:hover {\n  background: var(--blue);\n  color: var(--white);\n  cursor: pointer;\n}\n\n@media screen and (min-width: 768px) {\n  .sub-heading {\n    font-size: 2rem;\n  }\n\n  .heading {\n    font-size: 4rem;\n  }\n\n  .start-btn {\n    font-size: 2rem;\n  }\n}\n',"",{version:3,sources:["webpack://./src/css/start-view.css"],names:[],mappings:"AAAA;EACE,wBAAwB;EACxB,YAAY;EACZ,aAAa;EACb,mBAAmB;EACnB,aAAa;EACb,sBAAsB;EACtB,mBAAmB;EACnB,gBAAgB;AAClB;;AAEA;EACE,gBAAgB;EAChB,oBAAoB;EACpB,kBAAkB;EAClB,kBAAkB;EAClB,yBAAyB;AAC3B;;AAEA;EACE,iBAAiB;EACjB,cAAc;EACd,kBAAkB;EAClB,mBAAmB;EACnB,yCAAyC;EACzC,eAAe;EACf,oBAAoB;AACtB;;AAEA;EACE,yBAAyB;EACzB,gBAAgB;EAChB,mBAAmB;EACnB,kBAAkB;EAClB,oBAAoB;EACpB;;uBAEqB;EACrB,kBAAkB;AACpB;;AAEA;EACE,uBAAuB;EACvB,mBAAmB;EACnB,eAAe;AACjB;;AAEA;EACE;IACE,eAAe;EACjB;;EAEA;IACE,eAAe;EACjB;;EAEA;IACE,eAAe;EACjB;AACF",sourcesContent:['.start-view {\n  background: var(--black);\n  width: 100vw;\n  height: 100vh;\n  color: var(--white);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  overflow: hidden;\n}\n\n.sub-heading {\n  margin-top: 12em;\n  color: var(--yellow);\n  font-size: 1.07rem;\n  text-align: center;\n  text-transform: uppercase;\n}\n\n.heading {\n  margin-top: 0.2em;\n  display: block;\n  text-align: center;\n  color: var(--white);\n  font-family: "Rubik Mono One", sans-serif;\n  font-size: 2rem;\n  margin-bottom: 0.8em;\n}\n\n.start-btn {\n  text-transform: uppercase;\n  font-weight: 600;\n  letter-spacing: 1px;\n  color: var(--blue);\n  padding: 0.3em 0.5em;\n  transition:\n    backround-color 200ms ease-in,\n    color 200ms ease-in;\n  border-radius: 5px;\n}\n\n.start-btn:hover {\n  background: var(--blue);\n  color: var(--white);\n  cursor: pointer;\n}\n\n@media screen and (min-width: 768px) {\n  .sub-heading {\n    font-size: 2rem;\n  }\n\n  .heading {\n    font-size: 4rem;\n  }\n\n  .start-btn {\n    font-size: 2rem;\n  }\n}\n'],sourceRoot:""}]);const A=i},402:(n,e,r)=>{r.d(e,{Z:()=>d});var t=r(537),o=r.n(t),a=r(645),i=r.n(a),A=r(806),s=r(553),c=r(198),l=i()(o());l.i(A.Z),l.i(s.Z),l.i(c.Z),l.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;600&family=Rubik+Mono+One&display=swap);"]),l.push([n.id,':root {\n  --black: #000;\n  --yellow: #faec00;\n  --white: #fff;\n  --blue: #0cabe8;\n  --gray: #9d9d9d33;\n}\n\nhtml {\n  font-family: "Open Sans", sans-serif;\n  font-size: 16px;\n  font-weight: 400;\n}\n\n*,\n*::after,\n*::before {\n  margin: 0;\n  padding: 0;\n  border-radius: 0;\n}\n\n.board {\n  display: grid;\n  grid-template-columns: repeat(10, 1fr);\n}\n',"",{version:3,sources:["webpack://./src/css/style.css"],names:[],mappings:"AAKA;EACE,aAAa;EACb,iBAAiB;EACjB,aAAa;EACb,eAAe;EACf,iBAAiB;AACnB;;AAEA;EACE,oCAAoC;EACpC,eAAe;EACf,gBAAgB;AAClB;;AAEA;;;EAGE,SAAS;EACT,UAAU;EACV,gBAAgB;AAClB;;AAEA;EACE,aAAa;EACb,sCAAsC;AACxC",sourcesContent:['@import "start-view.css";\n@import "utility.css";\n@import "placing-view";\n@import url("https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;600&family=Rubik+Mono+One&display=swap");\n\n:root {\n  --black: #000;\n  --yellow: #faec00;\n  --white: #fff;\n  --blue: #0cabe8;\n  --gray: #9d9d9d33;\n}\n\nhtml {\n  font-family: "Open Sans", sans-serif;\n  font-size: 16px;\n  font-weight: 400;\n}\n\n*,\n*::after,\n*::before {\n  margin: 0;\n  padding: 0;\n  border-radius: 0;\n}\n\n.board {\n  display: grid;\n  grid-template-columns: repeat(10, 1fr);\n}\n'],sourceRoot:""}]);const d=l},553:(n,e,r)=>{r.d(e,{Z:()=>A});var t=r(537),o=r.n(t),a=r(645),i=r.n(a)()(o());i.push([n.id,".hidden {\n  display: none;\n}\n","",{version:3,sources:["webpack://./src/css/utility.css"],names:[],mappings:"AAAA;EACE,aAAa;AACf",sourcesContent:[".hidden {\n  display: none;\n}\n"],sourceRoot:""}]);const A=i},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var r="",t=void 0!==e[5];return e[4]&&(r+="@supports (".concat(e[4],") {")),e[2]&&(r+="@media ".concat(e[2]," {")),t&&(r+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),r+=n(e),t&&(r+="}"),e[2]&&(r+="}"),e[4]&&(r+="}"),r})).join("")},e.i=function(n,r,t,o,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(t)for(var A=0;A<this.length;A++){var s=this[A][0];null!=s&&(i[s]=!0)}for(var c=0;c<n.length;c++){var l=[].concat(n[c]);t&&i[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),r&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=r):l[2]=r),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),e.push(l))}},e}},537:n=>{n.exports=function(n){var e=n[1],r=n[3];if(!r)return e;if("function"==typeof btoa){var t=btoa(unescape(encodeURIComponent(JSON.stringify(r)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t),a="/*# ".concat(o," */");return[e].concat([a]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function r(n){for(var r=-1,t=0;t<e.length;t++)if(e[t].identifier===n){r=t;break}return r}function t(n,t){for(var a={},i=[],A=0;A<n.length;A++){var s=n[A],c=t.base?s[0]+t.base:s[0],l=a[c]||0,d="".concat(c," ").concat(l);a[c]=l+1;var p=r(d),u={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var m=o(u,t);t.byIndex=A,e.splice(A,0,{identifier:d,updater:m,references:1})}i.push(d)}return i}function o(n,e){var r=e.domAPI(e);return r.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;r.update(n=e)}else r.remove()}}n.exports=function(n,o){var a=t(n=n||[],o=o||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var A=r(a[i]);e[A].references--}for(var s=t(n,o),c=0;c<a.length;c++){var l=r(a[c]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}a=s}}},569:n=>{var e={};n.exports=function(n,r){var t=function(n){if(void 0===e[n]){var r=document.querySelector(n);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(n){r=null}e[n]=r}return e[n]}(n);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");t.appendChild(r)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,r)=>{n.exports=function(n){var e=r.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(r){!function(n,e,r){var t="";r.supports&&(t+="@supports (".concat(r.supports,") {")),r.media&&(t+="@media ".concat(r.media," {"));var o=void 0!==r.layer;o&&(t+="@layer".concat(r.layer.length>0?" ".concat(r.layer):""," {")),t+=r.css,o&&(t+="}"),r.media&&(t+="}"),r.supports&&(t+="}");var a=r.sourceMap;a&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(t,n,e.options)}(e,n,r)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function r(t){var o=e[t];if(void 0!==o)return o.exports;var a=e[t]={id:t,exports:{}};return n[t](a,a.exports,r),a.exports}r.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return r.d(e,{a:e}),e},r.d=(n,e)=>{for(var t in e)r.o(e,t)&&!r.o(n,t)&&Object.defineProperty(n,t,{enumerable:!0,get:e[t]})},r.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),r.nc=void 0,(()=>{var n=r(379),e=r.n(n),t=r(795),o=r.n(t),a=r(569),i=r.n(a),A=r(565),s=r.n(A),c=r(216),l=r.n(c),d=r(589),p=r.n(d),u=r(402),m={};m.styleTagTransform=p(),m.setAttributes=s(),m.insert=i().bind(null,"head"),m.domAPI=o(),m.insertStyleElement=l(),e()(u.Z,m),u.Z&&u.Z.locals&&u.Z.locals;const f=document.querySelector(".starting-board");!function(){for(let n=0;n<10;n++)for(let e=0;e<10;e++){const r=document.createElement("div");r.className="cell placing-cell",r.dataset.pos=n+","+e,f.appendChild(r)}}(),function n(){const e=document.querySelectorAll(".placing-cell"),r=document.querySelector(".flip-btn"),t=!0;r.addEventListener("click",(()=>{t=!t,n()})),e.forEach(((n,e)=>{n.addEventListener("mouseover",(n=>function(n){let e=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],r=arguments.length>2?arguments[2]:void 0,t=arguments.length>3?arguments[3]:void 0,o=n.target,a=(t+1)%10,i=Math.floor(t+.1);const A=0!==a&&a+r<=11;for(let n=0;n<r;n++){const r=A?"green":"red";if(o.style.backgroundColor=r,o=o.nextElementSibling,e){if(0===a||a+n>10)break}else if(i+n>10)break}}(n,t,3,e))),n.addEventListener("mouseout",(n=>function(n){let e=arguments.length>2?arguments[2]:void 0,r=n.target;for(let n=0;n<e;n++)r.style.backgroundColor="white",r=r.nextElementSibling}(n,t,3,e)))}))}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,